/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package casinoGame;

import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.Random;

/**
 *
 * @author maxra
 */
public class TwentyOne extends javax.swing.JFrame {

    public ArrayList<Authentication> UserList = new ArrayList<>();
    private int userScore = 0;

    /**
     * Creates new form TwentyOne
     */
    public TwentyOne() {
        initComponents();

        UserList = FileHandling.readFile();
        LogInSystem index = new LogInSystem();
        jLabel3.setText("Coins: " + UserList.get(index.getCurrentUName()).getCurrency());

        TwentyOne2.setVisible(false);
        TwentyOne3.setVisible(false);
        TwentyOne4.setVisible(false);
        TwentyOne5.setVisible(false);
        TwentyOne6.setVisible(false);
        TwentyOne7.setVisible(false);
        TwentyOne8.setVisible(false);
        TwentyOne9.setVisible(false);
        TwentyOne10.setVisible(false);
        TwentyOneAce.setVisible(false);
        TwentyOneJack.setVisible(false);
        TwentyOneKing.setVisible(false);
        TwentyOneQueen.setVisible(false);
        jLabel1.setVisible(false);
        PlayAgain.setVisible(false);
        Home.setVisible(false);
        rule1.setVisible(false);
        rule2.setVisible(false);
        rule3.setVisible(false);
        rule4.setVisible(false);
        hideRules.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TwentyOneQueen = new javax.swing.JLabel();
        TwentyOneKing = new javax.swing.JLabel();
        TwentyOneJack = new javax.swing.JLabel();
        TwentyOneAce = new javax.swing.JLabel();
        TwentyOne10 = new javax.swing.JLabel();
        TwentyOne9 = new javax.swing.JLabel();
        TwentyOne8 = new javax.swing.JLabel();
        TwentyOne7 = new javax.swing.JLabel();
        TwentyOne6 = new javax.swing.JLabel();
        TwentyOne5 = new javax.swing.JLabel();
        TwentyOne4 = new javax.swing.JLabel();
        TwentyOne3 = new javax.swing.JLabel();
        TwentyOne2 = new javax.swing.JLabel();
        stick = new javax.swing.JButton();
        twist = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        PlayAgain = new javax.swing.JButton();
        Home = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        rule1 = new javax.swing.JLabel();
        rule2 = new javax.swing.JLabel();
        rule3 = new javax.swing.JLabel();
        rule4 = new javax.swing.JLabel();
        rules = new javax.swing.JButton();
        hideRules = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        backdrop = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        TwentyOneQueen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/casinoGame/QC.png"))); // NOI18N
        getContentPane().add(TwentyOneQueen);
        TwentyOneQueen.setBounds(760, 480, 1210, 1170);

        TwentyOneKing.setIcon(new javax.swing.ImageIcon(getClass().getResource("/casinoGame/KS.png"))); // NOI18N
        getContentPane().add(TwentyOneKing);
        TwentyOneKing.setBounds(760, 480, 950, 1170);

        TwentyOneJack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/casinoGame/JH.png"))); // NOI18N
        getContentPane().add(TwentyOneJack);
        TwentyOneJack.setBounds(760, 500, 1110, 1110);

        TwentyOneAce.setIcon(new javax.swing.ImageIcon(getClass().getResource("/casinoGame/AD.png"))); // NOI18N
        getContentPane().add(TwentyOneAce);
        TwentyOneAce.setBounds(760, 500, 1150, 1120);

        TwentyOne10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/casinoGame/10C.png"))); // NOI18N
        getContentPane().add(TwentyOne10);
        TwentyOne10.setBounds(760, 480, 1140, 1160);

        TwentyOne9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/casinoGame/9S.png"))); // NOI18N
        getContentPane().add(TwentyOne9);
        TwentyOne9.setBounds(760, 520, 1040, 1070);

        TwentyOne8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/casinoGame/8H.png"))); // NOI18N
        getContentPane().add(TwentyOne8);
        TwentyOne8.setBounds(760, 530, 1700, 1070);

        TwentyOne7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/casinoGame/7D.png"))); // NOI18N
        getContentPane().add(TwentyOne7);
        TwentyOne7.setBounds(760, 520, 1040, 1100);

        TwentyOne6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/casinoGame/6C.png"))); // NOI18N
        getContentPane().add(TwentyOne6);
        TwentyOne6.setBounds(760, 490, 830, 1140);

        TwentyOne5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/casinoGame/5S.png"))); // NOI18N
        getContentPane().add(TwentyOne5);
        TwentyOne5.setBounds(760, 530, 1040, 1080);

        TwentyOne4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/casinoGame/4D.png"))); // NOI18N
        getContentPane().add(TwentyOne4);
        TwentyOne4.setBounds(760, 500, 900, 1140);

        TwentyOne3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/casinoGame/3D.png"))); // NOI18N
        getContentPane().add(TwentyOne3);
        TwentyOne3.setBounds(760, 510, 950, 1110);

        TwentyOne2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/casinoGame/2C.png"))); // NOI18N
        getContentPane().add(TwentyOne2);
        TwentyOne2.setBounds(760, 540, 691, 1056);

        stick.setFont(new java.awt.Font("Niagara Solid", 1, 48)); // NOI18N
        stick.setText("Stick");
        stick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stickActionPerformed(evt);
            }
        });
        getContentPane().add(stick);
        stick.setBounds(200, 450, 150, 90);

        twist.setFont(new java.awt.Font("Niagara Solid", 1, 48)); // NOI18N
        twist.setText("Twist");
        twist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twistActionPerformed(evt);
            }
        });
        getContentPane().add(twist);
        twist.setBounds(200, 550, 150, 80);

        jLabel1.setFont(new java.awt.Font("Niagara Solid", 0, 48)); // NOI18N
        jLabel1.setText("Outcome message");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(510, 410, 940, 160);

        PlayAgain.setFont(new java.awt.Font("Niagara Solid", 1, 24)); // NOI18N
        PlayAgain.setText("Play Again");
        PlayAgain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlayAgainActionPerformed(evt);
            }
        });
        getContentPane().add(PlayAgain);
        PlayAgain.setBounds(840, 570, 150, 50);

        Home.setFont(new java.awt.Font("Niagara Solid", 1, 24)); // NOI18N
        Home.setText("home");
        Home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeActionPerformed(evt);
            }
        });
        getContentPane().add(Home);
        Home.setBounds(840, 630, 150, 50);

        jLabel2.setFont(new java.awt.Font("Niagara Solid", 3, 66)); // NOI18N
        jLabel2.setText("Twenty One");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(790, 30, 440, 130);

        rule1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        rule1.setText("the aim is to get closer to 21 than the computer");
        getContentPane().add(rule1);
        rule1.setBounds(770, 190, 340, 20);

        rule2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        rule2.setText("when you press twist the value of the card that is on the screen gets added to your total");
        getContentPane().add(rule2);
        rule2.setBounds(620, 210, 700, 40);

        rule3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        rule3.setText("if you go over 21 you go bust and lose!");
        getContentPane().add(rule3);
        rule3.setBounds(800, 250, 260, 20);

        rule4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        rule4.setText("Press twist to start");
        getContentPane().add(rule4);
        rule4.setBounds(860, 270, 150, 30);

        rules.setFont(new java.awt.Font("Niagara Solid", 1, 24)); // NOI18N
        rules.setText("How to play");
        rules.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rulesActionPerformed(evt);
            }
        });
        getContentPane().add(rules);
        rules.setBounds(830, 140, 160, 40);

        hideRules.setFont(new java.awt.Font("Niagara Solid", 1, 24)); // NOI18N
        hideRules.setText("Hide");
        hideRules.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hideRulesActionPerformed(evt);
            }
        });
        getContentPane().add(hideRules);
        hideRules.setBounds(870, 140, 90, 50);

        jLabel3.setFont(new java.awt.Font("Niagara Solid", 0, 48)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jLabel3);
        jLabel3.setBounds(170, 60, 470, 130);

        backdrop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/casinoGame/backdrop.jpg"))); // NOI18N
        getContentPane().add(backdrop);
        backdrop.setBounds(0, -100, 2210, 1210);

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void isUserBankrupt(){
    LogInSystem useraccount = new LogInSystem();
     if ((UserList.get(useraccount.getCurrentUName()).getCurrency()) <= 0) {
                UserList.remove((useraccount.getCurrentUName()));
                FileHandling.writeFile(UserList);
                insufficientFunds start = new insufficientFunds();
                Toolkit tk = Toolkit.getDefaultToolkit();
                int width = (int) tk.getScreenSize().getWidth();
                int height = (int) tk.getScreenSize().getHeight();

                start.setSize(width, height);
                start.setVisible(true);
                this.dispose();

            }
}
    private void stickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stickActionPerformed
        Random rand = new Random();
        LogInSystem useraccount = new LogInSystem();
        int ComputerScore = rand.nextInt((21 - 16) + 1) + 16;
        String OutCome = null;
        int newCoins;
        if (userScore > 21) {
            OutCome = "went over 21 and therefore bust";
            newCoins = UserList.get(useraccount.getCurrentUName()).getCurrency() - 100;
            jLabel3.setText("" + newCoins);
            UserList.get(useraccount.getCurrentUName()).setCurrency(newCoins);
            FileHandling.writeFile(UserList);

           
            isUserBankrupt();
            
        } else if (userScore > ComputerScore) {
            OutCome = "Win";
            newCoins = UserList.get(useraccount.getCurrentUName()).getCurrency() + 100;
            jLabel3.setText("" + newCoins);
            UserList.get(useraccount.getCurrentUName()).setCurrency(newCoins);
            FileHandling.writeFile(UserList);

        } else if (userScore == ComputerScore) {
            OutCome = "draw";
            newCoins = UserList.get(useraccount.getCurrentUName()).getCurrency() + 50;
            jLabel3.setText("" + newCoins);
            UserList.get(useraccount.getCurrentUName()).setCurrency(newCoins);
            FileHandling.writeFile(UserList);
        } else {
            OutCome = "lose";
            newCoins = UserList.get(useraccount.getCurrentUName()).getCurrency() - 100;
            jLabel3.setText("" + newCoins);

            UserList.get(useraccount.getCurrentUName()).setCurrency(newCoins);
            FileHandling.writeFile(UserList);
            isUserBankrupt();
        }

        jLabel1.setText("you " + OutCome + ", the computer scored " + ComputerScore + " but your score was " + userScore);
        jLabel1.setVisible(true);
        PlayAgain.setVisible(true);
        Home.setVisible(true);
        TwentyOne2.setVisible(false);
        TwentyOne3.setVisible(false);
        TwentyOne4.setVisible(false);
        TwentyOne5.setVisible(false);
        TwentyOne6.setVisible(false);
        TwentyOne7.setVisible(false);
        TwentyOne8.setVisible(false);
        TwentyOne9.setVisible(false);
        TwentyOne10.setVisible(false);
        TwentyOneAce.setVisible(false);
        TwentyOneJack.setVisible(false);
        TwentyOneKing.setVisible(false);
        TwentyOneQueen.setVisible(false);
        stick.setVisible(false);
        twist.setVisible(false);

    }//GEN-LAST:event_stickActionPerformed

    private void twistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twistActionPerformed
        TwentyOne2.setVisible(false);
        TwentyOne3.setVisible(false);
        TwentyOne4.setVisible(false);
        TwentyOne5.setVisible(false);
        TwentyOne6.setVisible(false);
        TwentyOne7.setVisible(false);
        TwentyOne8.setVisible(false);
        TwentyOne9.setVisible(false);
        TwentyOne10.setVisible(false);
        TwentyOneAce.setVisible(false);
        TwentyOneJack.setVisible(false);
        TwentyOneKing.setVisible(false);
        TwentyOneQueen.setVisible(false);
        Random rand = new Random();
        int cardNum = rand.nextInt((13 - 2) + 1) + 2;
        int cardType = rand.nextInt(4);
        if (cardNum == 1) {//                        ace

            TwentyOneAce.setVisible(true);
            userScore = userScore + 11;
        } else if (cardNum == 2) {
            TwentyOne2.setVisible(true);
            userScore = userScore + 2;
        } else if (cardNum == 3) {
            TwentyOne3.setVisible(true);
            userScore = userScore + 3;
        } else if (cardNum == 4) {
            TwentyOne4.setVisible(true);
            userScore = userScore + 4;
        } else if (cardNum == 5) {
            TwentyOne5.setVisible(true);
            userScore = userScore + 5;
        } else if (cardNum == 6) {
            TwentyOne6.setVisible(true);
            userScore = userScore + 6;
        } else if (cardNum == 7) {
            TwentyOne7.setVisible(true);
            userScore = userScore + 7;
        } else if (cardNum == 8) {
            TwentyOne8.setVisible(true);
            userScore = userScore + 8;
        } else if (cardNum == 9) {
            TwentyOne9.setVisible(true);
            userScore = userScore + 9;
        } else if (cardNum == 10) {
            TwentyOne10.setVisible(true);
            userScore = userScore + 10;
        } else if (cardNum == 11) {//queen
            TwentyOneQueen.setVisible(true);
            userScore = userScore + 10;
        } else if (cardNum == 12) {//king
            TwentyOneKing.setVisible(true);
            userScore = userScore + 10;
        } else if (cardNum == 13) {//jack
            TwentyOneJack.setVisible(true);
            userScore = userScore + 10;
        }
    }//GEN-LAST:event_twistActionPerformed

    private void PlayAgainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlayAgainActionPerformed
        TwentyOne start = new TwentyOne();
        Toolkit tk = Toolkit.getDefaultToolkit();
        int width = (int) tk.getScreenSize().getWidth();
        int height = (int) tk.getScreenSize().getHeight();

        start.setSize(width, height);
        start.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_PlayAgainActionPerformed

    private void HomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeActionPerformed
        MainMenu start = new MainMenu();
        Toolkit tk = Toolkit.getDefaultToolkit();
        int width = (int) tk.getScreenSize().getWidth();
        int height = (int) tk.getScreenSize().getHeight();

        start.setSize(width, height);
        start.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_HomeActionPerformed

    private void rulesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rulesActionPerformed
        rule1.setVisible(true);
        rule2.setVisible(true);
        rule3.setVisible(true);
        rule4.setVisible(true);
        hideRules.setVisible(true);
        rules.setVisible(false);

    }//GEN-LAST:event_rulesActionPerformed

    private void hideRulesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hideRulesActionPerformed
        rule1.setVisible(false);
        rule2.setVisible(false);
        rule3.setVisible(false);
        rule4.setVisible(false);
        rules.setVisible(true);
        hideRules.setVisible(false);
    }//GEN-LAST:event_hideRulesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TwentyOne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TwentyOne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TwentyOne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TwentyOne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TwentyOne().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Home;
    private javax.swing.JButton PlayAgain;
    private javax.swing.JLabel TwentyOne10;
    private javax.swing.JLabel TwentyOne2;
    private javax.swing.JLabel TwentyOne3;
    private javax.swing.JLabel TwentyOne4;
    private javax.swing.JLabel TwentyOne5;
    private javax.swing.JLabel TwentyOne6;
    private javax.swing.JLabel TwentyOne7;
    private javax.swing.JLabel TwentyOne8;
    private javax.swing.JLabel TwentyOne9;
    private javax.swing.JLabel TwentyOneAce;
    private javax.swing.JLabel TwentyOneJack;
    private javax.swing.JLabel TwentyOneKing;
    private javax.swing.JLabel TwentyOneQueen;
    private javax.swing.JLabel backdrop;
    private javax.swing.JButton hideRules;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel rule1;
    private javax.swing.JLabel rule2;
    private javax.swing.JLabel rule3;
    private javax.swing.JLabel rule4;
    private javax.swing.JButton rules;
    private javax.swing.JButton stick;
    private javax.swing.JButton twist;
    // End of variables declaration//GEN-END:variables
}
